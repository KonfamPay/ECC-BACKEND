<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
    @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;500;600&display=swap");
        body {
            margin: 0;
        }
        * {
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }
        /* Section for styling items in the form */
        .form {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px 90px;
            animation: fadeIn 0.3s ease-in 0.2s
        }
        .formHeader {
            font-size: 40px;
            margin-bottom: 15px;
        }
        .email {
            margin-top: 0; 
            margin-bottom: 41px;
            color: #0B63C5;
            font-size: 20px;
        }
        .inputGroup {
            display: flex;
            flex-direction: column;
            width: 100%;
            position: relative;
        }
        .inputGroup label {
            margin-bottom: 11px;
            font-size: 20px;
        }
        .inputGroup input {
            width: 100%;
            padding: 25px 20px;
            border-radius: 12px;
            border: 2px solid #C5C5C5;
            box-shadow: 0 0 0;
        }
        .inputGroup input:focus { 
            outline: 0;
        }
        .inputGroup:nth-of-type(2) {
            margin-top: 20px;
        }
        .submitButton {
            width: 100%;
            height: 74px;
            font-size: 20px;
            color: white;
            background-color: #0B63C5;
            border: 0;
            border-radius: 12px;
            margin-top: 35px;
            cursor: pointer;
        }
        .submitButton:active {
            transform: scale(0.95);
            transition: all 0.2s;
        }
        /* Styles for the page */
        .pageContainer {
            width: 100vw;
            display: grid;
            grid-template-columns: 1fr 1fr;
            min-height: 100vh;
        }
        .leftContainer {
            background: linear-gradient(146.62deg, #0B63C5 38.53%, #073D79 111.19%), #FFFFFF;
            position: relative;
        }
        .logo {
            margin-top: 56px;
            margin-left: 50px;
            height: 33.5px;
        }
        .polygons {
            position: absolute;
            left: 0;
            bottom: 0;
        }
        article {
            margin-left: 50px;
            color: white;
            margin-top: 120px;
        }
        article h1 {
            font-size: 48px;
            margin: 0
        }
        article p {
            max-width: 492px;
            font-size: 20px;
            font-weight: 600;
        }
        .indicator {
            position: absolute;
            top: 67px;
            right: 25px;
        }
        .successModalBackground {
            position: fixed;
            top: 0;
            bottom: 0;
            right: 0;
            left: 0;
            z-index: 10;
        } 
        .successModalBackground.dark {
            background-color: black;
            opacity: 0.8;
            animation: fadeIn 0.3s ease-in 0.2s;
        }
        .successModalContainer {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .successModal {
            width: 100%;
            max-width: 828px;
            padding-top: 59px;
            padding-bottom: 44px;
            background-color: white;
            border-radius: 12px;
            display: flex;
            flex-direction: column;
            align-items: center;
            animation: fadeInUp 0.25s ease-in-out 0.5s;
        }
        .modalHeader {
            font-size: 40px;
            margin: 0;
            font-weight: 500;
        }
        .modalText {
            text-align: center;
            font-size: 20px;
            font-weight: 500;
            line-height: 45px;
            margin-bottom: 0;
        }
        .submitButton.modalButton {
            max-width: 587px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-decoration: none;
        }
        /* Section for defining the animations */
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 0.8;
            }
        }
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(160px);
            }
            to {
                opacity: 1;
                transform: translateY(-10px);
            }
        }
    </style>
</head>
<body>
    <div>
        <div class="successModalBackground dark"></div>
        <div class="successModalBackground successModalContainer">
            <div class="successModal">
                <img src="/check-circle.svg" />
                <p class="modalHeader">Successful!</p>
                <p class="modalText">Your password has been successfully reset. <br /> You can now
                    login into your account with your new password.</p>
                <a class="submitButton modalButton" href=<%= loginLink %>>Proceed to login</a>    
            </div>
        </div>
    </div>
    <div class="pageContainer">
        <div class="leftContainer">
            <img src="/eccLogo.svg" class="logo"/>
            <img src="/polygons.svg" class="polygons" />
            <article>
                <h1>Reset Password</h1>
                <p>Enter your new password and confirm it to reset
                    your password</p>
            </article>
        </div>
        <form class="form" action="" method="POST">
            <h1 class="formHeader">Reset Password</h1>
            <p class="email"> <%= email %> </p>
            <div class="inputGroup">
                <label  for="password">Your new password</label>
                <input value=<%= password %> name="password" id="password" type="password" placeholder="Enter new password"/>
            </div>
            <div class="inputGroup">
                <label for="password2">Confirm new password</label>
                <input value=<%= password %> id="password2" type="password" placeholder="Confirm Password"/>
                <div class="indicator">
                    <img id="wrong" src="/x-close.svg" />
                    <img id="correct" src="/tick.svg" />
                </div>
            </div>
            <button class="submitButton" onclick="submitForm" id="submitButton">Recover Password</button>
        </form>
    </div>
    <script>
        const button = document.getElementById("submitButton");
        const password = document.getElementById("password");
        const form = document.querySelector(".form");
        const confirmPassword = document.getElementById("password2");
        const correctIcon = document.getElementById("correct");
        const wrongIcon = document.getElementById("wrong");

        
        correctIcon.style.display = "none";
        console.log(correctIcon);
        
        const showWrongIcon = () => {
            wrongIcon.style.display = "block";
            correctIcon.style.display= "none";
        }
        const showCorrectIcon = () => {
            wrongIcon.style.display = "none";
            correctIcon.style.display= "block";
        }
        const onChange = (e) => {
            console.log(password.value.length >= 8 && password.value.length < 50 && password.value == confirmPassword.value);
            if (password.value.length >= 8 && password.value.length < 50 && password.value == confirmPassword.value) {
                showCorrectIcon();
            } else {
                showWrongIcon();
            }
        }
        const submitForm = (e) => {
            e.preventDefault();
            if (password.value.length < 8) {
                alert("Password must be at least 8 characters");
            } else if (password.value.length > 50 ) {
                alert("Password has a maximum of 50 characters")
            } else if (password.value != confirmPassword.value) {
                alert("Passwords must match!")
            } else {
                form.submit();
            }
        } 
        button.addEventListener("click", submitForm)
        password.addEventListener("input", onChange);
        confirmPassword.addEventListener("input", onChange);
        </script>
</body>
</html>